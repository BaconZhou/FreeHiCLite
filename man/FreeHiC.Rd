% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FreeHiC.R
\name{FreeHiC}
\alias{FreeHiC}
\title{FreeHiC simulator}
\usage{
FreeHiC(
  contacts,
  seqDepth = NULL,
  countScale = 1,
  noiseRate = 0,
  neighborZeroRate = 0,
  resolution = 50000L
)
}
\arguments{
\item{contacts}{A \code{\link[base]{list}} of contacts matrix. The list element should named by chromosome pair.
\itemize{
\item{\code{\link[base]{matrix}}}{A matrix with columns (x, y, counts).}
\item{\code{\link[base]{data.frame}}}{A data.frame with columns (chr1, x, y, chr2, counts).}
\item{\code{\link[base]{list}}}{A list of matrix, where the matrix has columns (x, y, counts).}
}
where \code{x} stands for the first chromosome location, \code{y} stands for the second chromosome location and \code{counts} is the interaction counts.}

\item{seqDepth}{The desired sequence depth.}

\item{countScale}{The scale of counts. A number larger than 0. If both \code{seqDepth} and \code{countScale} are provided. Choose the larger one.}

\item{noiseRate}{The noise rate for contact matrix. 0 - 1 scale}

\item{neighborZeroRate}{The rate for neighborhood noise rate. 0 - 1 scale}

\item{resolution}{The resolution used in the contacts matrix. A positive number.}
}
\value{
A list or matrix or data.frame with the same format as \code{contacts}
}
\description{
This function performs FreeHiC based on contact matrix only.
}
\examples{

library(FreeHiCLite)

N <- 2000
maxBinX <- maxBinY <- 2000000L
maxCounts <- 10
binX <- sample(1:maxBinX, N, replace=TRUE)
binY <- sample(1:maxBinY, N, replace=TRUE)
counts <- sample(1:10, N, replace=TRUE)

seqDepth <- 20000
countScale <- 0
noiseRate <- 0.1
neighborZeroRate <- 0
resolution <- 5000

## Matrix version
## matrix layout as x, y, counts
contacts <- matrix(0, N, 3)
contacts[,1] <- binX
contacts[,2] <- binY
contacts[,3] <- counts

res <- FreeHiC(contacts, seqDepth, countScale, noiseRate, neighborZeroRate, resolution)
head(res)

## List version
N2 = 3000
binX2 <- sample(1:maxBinX, N2, replace=TRUE)
binY2 <- sample(1:maxBinY, N2, replace=TRUE)
counts2 <- sample(1:10, N2, replace=TRUE)

contacts2 <- matrix(0, N2, 3)
contacts2[,1] <- binX2
contacts2[,2] <- binY2
contacts2[,3] <- counts2

contactsMap <- list('1_1' = contacts, '2_2' = contacts2)
res <- FreeHiC(contactsMap, seqDepth, countScale, noiseRate, neighborZeroRate, resolution)
str(res)

## Dataframe version

chr1 <- c(rep('1', N), rep('2', N2))
chr2 <- c(rep('1', N), rep('2', N2))

contactsAll <- rbind(contacts, contacts2)

contactsDf <- data.frame(chr1 = chr1, x = contactsAll[,1], 
chr2 = chr2, y = contactsAll[,2], counts = contactsAll[,3])

res <- FreeHiC(contactsDf, seqDepth, countScale, noiseRate, neighborZeroRate, resolution)
head(res)

}
\references{
Zheng, Ye, Keles, Sunduz FreeHi-C simulates high-fidelity Hi-C data for benchmarking and data augmentation. 
\emph{Nature Methods} \strong{17}, 37â€“40 (2020). \href{https://doi.org/10.1038/s41592-019-0624-3}{doi}
}
